% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/ft_get.R
\name{ft_get}
\alias{ft_get}
\alias{ft_get.character}
\alias{ft_get.ft}
\title{Get full text.}
\usage{
ft_get(x, query, from = "plos", plosopts = list(), bmcopts = list(),
  entrezopts = list(), elifeopts = list(), cache = FALSE,
  backend = "rds", path = "~/.fulltext", ...)

\method{ft_get}{character}(x, query, from = "plos", plosopts = list(),
  bmcopts = list(), entrezopts = list(), elifeopts = list(),
  cache = FALSE, backend = "rds", path = "~/.fulltext", ...)

\method{ft_get}{ft}(x, query, from = NULL, plosopts = list(),
  bmcopts = list(), entrezopts = list(), elifeopts = list(),
  cache = FALSE, backend = "rds", path = "~/.fulltext", ...)
}
\arguments{
\item{x}{Identifiers for papers, either DOIs, or other ids.}

\item{query}{Query terms}

\item{from}{Source to query}

\item{plosopts}{PLOS options. See \code{\link[rplos]{plos_fulltext}}}

\item{bmcopts}{BMC options. See \code{\link{bmc_xml}}}

\item{entrezopts}{Entrez options. See \code{\link[rentrez]{entrez_search}} and
\code{\link{entrez_fetch}}}

\item{elifeopts}{eLife options}

\item{cache}{(logical) To cache results or not. If \code{cache=TRUE}, raw XML, or other
format that article is in is written to disk, then pulled from disk when further
manipulations are done on the data. See also \code{\link{cache}}}

\item{backend}{(character) One of rds, rcache, or redis}

\item{path}{(character) Path to local folder}

\item{...}{Further args passed on to \code{\link[httr]{GET}}}
}
\value{
An object of class \code{ft_data}
}
\description{
Get full text.
}
\examples{
\donttest{
# by default, plos gives back xml
ft_get('10.1371/journal.pone.0086169', from='plos')

# instead, get json
ft_get('10.1371/journal.pone.0086169', from='plos', plosopts=list(wt="json"))

(dois <- searchplos(q="*:*", fl='id',
   fq=list('doc_type:full',"article_type:\\"research article\\""), limit=5)$data$id)
ft_get(dois, from='plos')
ft_get(c('10.7717/peerj.228','10.7717/peerj.234'), from='entrez')

# elife
ft_get('10.7554/eLife.04300', from='elife')
ft_get(c('10.7554/eLife.04300','10.7554/eLife.03032'), from='elife')
##### replace with code not using elife packages
dois <- searchelife(terms="Cell biology", searchin="subject_area", boolean="contains")
ft_get(dois[1:10], from='elife')

# bmc
ft_get('http://www.microbiomejournal.com/content/download/xml/2049-2618-2-7.xml', from='bmc')
urls <- c('http://www.biomedcentral.com/content/download/xml/1471-2393-14-71.xml',
 'http://www.springerplus.com/content/download/xml/2193-1801-3-7.xml',
 'http://www.microbiomejournal.com/content/download/xml/2049-2618-2-7.xml')
ft_get(urls, from='bmc')

# Frontiers in Pharmacology (publisher: Frontiers)
doi <- '10.3389/fphar.2014.00109'
ft_get(doi, from="entrez")

# Hindawi Journals
ft_get(c('10.1155/2014/292109','10.1155/2014/162024','10.1155/2014/249309'), from='entrez')
res <- ft_search(query='ecology', from='crossref', limit=50,
                 crossrefopts = list(filter=list(has_full_text = TRUE,
                                                 member=98,
                                                 type='journal-article')))

out <- ft_get(res$crossref$data$DOI[1:20], from='entrez')

# Frontiers Publisher - Frontiers in Aging Nueroscience
res <- ft_get("10.3389/fnagi.2014.00130", from='entrez')
res$entrez

# Search entrez, get some DOIs
(res <- ft_search(query='ecology', from='entrez'))
res$entrez$data$DOI
ft_get(res$entrez$data$DOI[1], from='entrez')
ft_get(res$entrez$data$DOI[1:3], from='entrez')

# Caching
res <- ft_get('10.1371/journal.pone.0086169', from='plos', cache=TRUE, backend="rds")

# Search entrez, and pass to ft_get()
(res <- ft_search(query='ecology', from='entrez'))
ft_get(res)
}
}

